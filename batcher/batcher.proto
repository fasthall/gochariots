syntax = "proto3";

service Batcher {
    rpc ReceiveRecord (RPCRecord) returns (RPCReply) {}
    rpc ReceiveRecords (RPCRecords) returns (RPCReply) {}
    rpc UpdateQueue (RPCQueues) returns (RPCReply) {}
    rpc TOIDReceiveRecord (RPCRecord) returns (RPCReply) {}
    rpc TOIDReceiveRecords (RPCRecords) returns (RPCReply) {}
    rpc TOIDUpdateQueue (RPCQueues) returns (RPCReply) {}
}

message RPCRecord {
    uint64 id = 1;
    int64 timestamp = 2;
    uint32 host = 3;
    uint32 lid = 4;
    map<string, string> tags = 5;
    repeated uint64 hash = 6;
    uint64 seed = 7;
    // for TOID record
    uint32 toid = 8;
    RPCCausality causality = 9;
}

message RPCCausality {
	uint32 host = 1;
	uint32 toid = 2;
}

message RPCRecords {
    repeated RPCRecord records = 1;
}

message RPCReply {
    string message = 1;
}

message RPCQueues {
    uint32 version = 1;
    repeated string queues = 2;
}