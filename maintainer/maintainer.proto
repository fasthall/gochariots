syntax = "proto3";

service Maintainer {
    rpc ReceiveRecords (RPCRecords) returns (RPCReply) {}
    rpc UpdateBatchers (RPCBatchers) returns (RPCReply) {}
    rpc UpdateIndexer (RPCIndexer) returns (RPCReply) {}
    rpc ReadByLId (RPCLId) returns (RPCReply) {}
    rpc TOIDReceiveRecords (RPCRecords) returns (RPCReply) {}
    rpc TOIDUpdateBatchers (RPCBatchers) returns (RPCReply) {}
    rpc TOIDUpdateIndexer (RPCIndexer) returns (RPCReply) {}
    rpc TOIDReadByLId (RPCLId) returns (RPCReply) {}
}

message RPCRecord {
    uint64 id = 1;
    int64 timestamp = 2;
    int32 host = 3;
    int32 lid = 4;
    map<string, string> tags = 5;
    repeated uint64 hash = 6;
    uint64 seed = 7;
    // for TOID record
    int32 toid = 8;
    RPCCausality causality = 9;
}

message RPCCausality {
	int32 host = 1;
	int32 toid = 2;
}

message RPCRecords {
    repeated RPCRecord records = 1;
}

message RPCReply {
    string message = 1;
}

message RPCBatchers {
    int32 version = 1;
    repeated string batcher = 2;
}

message RPCIndexer {
    int32 version = 1;
    string indexer = 2;
}

message RPCLId {
    int32 lid = 1;
}