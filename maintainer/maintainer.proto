syntax = "proto3";

service Maintainer {
    rpc UpdateRedisCache (RPCRedisCache) returns (RPCReply) {}
    rpc ReceiveRecords (RPCRecords) returns (RPCReply) {}
    rpc UpdateBatchers (RPCBatchers) returns (RPCReply) {}
    rpc TOIDReceiveRecords (RPCRecords) returns (RPCReply) {}
    rpc TOIDUpdateBatchers (RPCBatchers) returns (RPCReply) {}
    rpc TOIDReadByLId (RPCLId) returns (RPCReply) {}
}

message RPCRecord {
    string id = 1;
    int64 timestamp = 2;
    uint32 host = 3;
    int64 seqid = 4;
    uint32 depth = 5;
    map<string, string> tags = 6;
    string trace = 7;
    // for TOID record
    uint32 lid = 8;
    uint32 toid = 9;
    RPCCausality causality = 10;
}

message RPCCausality {
	uint32 host = 1;
	uint32 toid = 2;
}

message RPCRecords {
    repeated RPCRecord records = 1;
}

message RPCReply {
    string message = 1;
}

message RPCBatchers {
    uint32 version = 1;
    repeated string batcher = 2;
}

message RPCLId {
    uint32 lid = 1;
}

message RPCRedisCache {
    uint32 version = 1;
    repeated string redisCache = 2;
}