version: '3'
services:
  controller:
    image: fasthall/gochariots
    entrypoint: gochariots controller -p 8081 -i
    volumes:
      - ./logs:/go/logs
    ports: 
      - 8081:8081
    networks:
      - cluster
#  app:
#    image: fasthall/gochariots
#    entrypoint: gochariots app -p 8080 -f config/config.yaml -i
#    depends_on:
#      - controller
#    volumes:
#      - ./config:/go/config
#      - ./logs:/go/logs
#    depends_on:
#      - controller
#    ports:
#      - 8080:8080
#    networks:
#      - cluster
  batcher:
    image: fasthall/gochariots
    entrypoint: gochariots batcher -p 9000 -f config/config.yaml -i --buffer_size=10000
    depends_on:
      - controller
    volumes:
      - ./config:/go/config
      - ./logs:/go/logs
    ports: 
      - 9000
    environment:
      - TCP_PORTS=9000
      - MONGODB_HOST=169.231.235.70
    networks:
      - cluster
  queue-leader:
    image: fasthall/gochariots
    entrypoint: gochariots queue --hold -f config/config.yaml -i -p 9020
    depends_on:
      - queue
      - controller
    environment:
      - MONGODB_HOST=169.231.235.70
    volumes:
      - ./config:/go/config
      - ./logs:/go/logs
    networks:
      - cluster
  queue:
    image: fasthall/gochariots
    entrypoint: gochariots queue --no-hold -f config/config.yaml -i -p 9021
    depends_on:
      - controller
    environment:
      - MONGODB_HOST=169.231.235.70
    volumes:
      - ./config:/go/config
      - ./logs:/go/logs
    networks:
      - cluster
  maintainer:
    image: fasthall/gochariots
    entrypoint: gochariots maintainer -f config/config.yaml -i --mongodb --benchmark_accuracy 10000
    depends_on:
      - controller
    environment:
      - MONGODB_HOST=169.231.235.70
    volumes:
      - ./config:/go/config
      - ./logs:/go/logs
      - ./flstore:/go/flstore
    networks:
      - cluster
  batcher_lb:
    image: dockercloud/haproxy
    depends_on:
      - batcher
    ports:
      - 9000:9000
    links:
      - batcher
    networks:                                                                                                                                  
      - cluster
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  cluster:
